{"version":3,"sources":["personService.js","App.js","index.js"],"names":["url","getAllPersons","axios","get","then","response","data","person","persons","find","personCheck","name","post","personName","personToDelete","delete","id","filter","personNumber","personToUpdate","updatedPerson","number","put","Filter","handler","value","onChange","PersonForm","handleSubmit","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","type","Persons","newFilter","handleDelete","toLowerCase","startsWith","sort","a","b","map","onClick","Notification","color","message","notificationStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","Error","Confirmation","App","useState","setPersons","setNewName","setNewNumber","filterString","setFilterString","confirmation","setConfirmation","error","setError","generatePersonsList","personService","catch","err","console","log","useEffect","updatePerson","newPerson","newPersons","push","event","target","preventDefault","includes","window","confirm","newPersonWithId","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b6e152e.chunk.js","sourcesContent":["import axios from 'axios'\nconst url = '/api/persons';\n\nconst getAllPersons = () => (\n  axios.get(url).then(response=>response.data)\n)\n\nconst addNewPerson = (person) => (\n  getAllPersons()\n    .then(persons => {\n      const possibleDuplicate = persons.find(personCheck => person.name === personCheck.name)\n      if (possibleDuplicate) throw \"DuplicationError\"\n      return axios.post(url, person).then(response=>response.data)\n    })\n)\n\nconst deletePerson = (personName) => (\n  getAllPersons()\n    .then(persons=>{\n      const personToDelete = persons.find(person => person.name === personName)\n      return axios.delete(`${url}/${personToDelete.id}`)\n        .then(()=>persons.filter(person=>person.id !== personToDelete.id))\n    })\n)\n\nconst updatePerson = (personName, personNumber) => (\n  getAllPersons()\n    .then(persons=>{\n      const personToUpdate = persons.find(person=> person.name === personName)\n      if (!personToUpdate) throw \"AlreadyDeletedError\"\n      const updatedPerson = {...personToUpdate, number:personNumber}\n      return axios.put(`${url}/${personToUpdate.id}`, updatedPerson)\n        .then(()=>(updatedPerson))\n    })\n)\n\nexport default { getAllPersons, addNewPerson, deletePerson, updatePerson }\n","import React, { useState, useEffect } from 'react'\nimport personService from './personService'\n\nconst Filter = ({handler, value}) => (\n  <div>\n    filter shown by: <input onChange={handler} value={value}/>\n  </div>\n)\n\nconst PersonForm = ({handleSubmit, handleNameChange, handleNumberChange, newName, newNumber}) => (\n  <form onSubmit={handleSubmit}>\n    <div>\n      name: <input onChange={handleNameChange} value={newName}/><br />\n      number: <input onChange={handleNumberChange} value={newNumber}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Persons = ({persons, newFilter, handleDelete }) => (\n  <table>\n    <tbody>\n      {persons\n      .filter(person=> (\n        person.name.toLowerCase().startsWith(newFilter.toLowerCase())\n      ))\n      .sort((a,b) => (a.name < b.name ? -1 : a.name === b.name ? 0 : 1))\n      .map(person=>(\n        <tr key={person.id}>\n          <td>{person.name}</td>\n          <td>{person.number}</td>\n          <td><button id={person.name} onClick={handleDelete}>delete</button></td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n)\n\nconst Notification = ({color, message}) => {\n  const notificationStyle = {\n    color: color,\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  return (\n    <h4 style={notificationStyle}>{message}</h4>\n  )\n}\n\nconst Error = ({message}) => {\n  return message \n  ? (\n    <Notification color='red' message={message} />\n  )\n  : <div></div>\n}\n\nconst Confirmation = ({message}) => {\n  return message \n  ? (\n    <Notification color='green' message={message} />\n  )\n  : <div></div>\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterString, setFilterString] = useState('')\n  const [ confirmation, setConfirmation] = useState('')\n  const [ error, setError] = useState('')\n  const generatePersonsList = () => {\n    personService.getAllPersons()\n      .then(data=>setPersons(data))\n      .catch(err=>console.log(err))\n  }\n  useEffect(()=>{\n    generatePersonsList()\n  }, [])\n  const updatePerson = (name, number) => {\n    personService.updatePerson(name, number)\n      .then(newPerson => {\n        setPersons((()=>{\n          const newPersons = persons.filter(person => person.name !== newPerson.name)\n          newPersons.push(newPerson)\n          return newPersons\n        })())\n        setError('')\n        setConfirmation(`Successfully updated ${name}`)\n      })\n      .catch(err => {\n          setConfirmation('')\n        if (err === 'AlreadyDeletedError') {\n          setError(`${name} has already been removed from the server`)\n          generatePersonsList()\n        } else {\n          setError(err.response.data.error)\n        }\n      })\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newPerson = {name: newName, number: newNumber}\n    if (!(persons.map(a=>a.name).includes(newName))) {\n      personService.addNewPerson(newPerson)\n        .then(newPersonWithId => {\n          setPersons(persons.concat(newPersonWithId))\n          setError('')\n          setConfirmation(`Successfully added ${newName}`)\n        })\n        .catch(err => {            \n          if (err === \"DuplicationError\" && window.confirm(`${newName} is already added to the phonebook, replace old number?`)) {\n            updatePerson(newName, newNumber)\n          } else {\n            setConfirmation('')\n            setError(err.response.data.error)\n          }\n        })\n    } else {\n      if (window.confirm(`${newName} is already added to the phonebook, replace old number?`)) {\n        updatePerson(newName, newNumber)\n      }\n    }\n    setNewNumber('')\n    setNewName('')\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilterString(event.target.value)\n  }\n  const handleDelete = (event) => {\n    const personName = event.target.id\n    if (window.confirm(`Delete ${personName}?`))\n    personService.deletePerson(personName)\n      .then(newPersons=>{\n        setPersons(newPersons)\n        setError('')\n        setConfirmation(`Deleted ${personName}`)\n      })\n      .catch(err=>console.log(err))\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Confirmation message={confirmation} />\n      <Error message={error} />\n      <Filter handler={handleFilterChange} value={filterString}/>\n      <h3>Add New</h3>\n      <PersonForm \n        handleNameChange={handleNameChange} \n        handleSubmit={handleSubmit}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}/>\n      <h2>Numbers</h2>\n      <Persons newFilter={filterString} persons={persons} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}